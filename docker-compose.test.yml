services:
  mysql-test:
    image: mysql:8.0.41-debian
    container_name: realtime_chat_app_mysql_test
    environment:
      MYSQL_ROOT_PASSWORD: test_password
      MYSQL_DATABASE: chat_app_test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
    ports:
      - "3307:3306"  # Different port to avoid conflicts
    networks:
      - chat_app_test_network
    restart: "no"
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=128M --innodb-log-file-size=64M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-ptest_password"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-test:
    image: redis:7.2.4-alpine
    container_name: realtime_chat_app_redis_test
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    networks:
      - chat_app_test_network
    restart: "no"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Test migration service for running migrations
  migrate-test:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: realtime_chat_app_migrate_test
    environment:
      # App Config
      - RUN_MODE=test
      - PORT=8080
        # MySQL Test Config
      - MYSQL_HOST=mysql-test
      - MYSQL_PORT=3306
      - MYSQL_USER=test_user
      - MYSQL_PASSWORD=test_password
      - MYSQL_DATABASE=chat_app_test_db
      - MYSQL_SSL_MODE=disable
      - MYSQL_MIGRATE_MODE=auto
      
      # Required environment variables (can be dummy values for migration)
      - ACCESS_TOKEN_SECRET_KEY=test_access_secret
      - REFRESH_TOKEN_SECRET_KEY=test_refresh_secret
      - FRONTEND_URI=http://localhost:3000
      - FRONTEND_PORT=3000
      - EMAIL_HOST=smtp.test.com
      - EMAIL_PORT=587
      - EMAIL_USER=test@test.com
      - EMAIL_PASS=testpass
      - EMAIL_FROM=test@test.com
      - EMAIL_NAME=Test App
      - CLOUDINARY_CLOUD_NAME=test
      - CLOUDINARY_API_KEY=test
      - CLOUDINARY_API_SECRET=test
      - REDIS_HOST=redis-test
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - KAFKA_BROKERS=localhost:9092
      - KAFKA_CHAT_TOPIC=test_topic
      - KAFKA_CONSUMER_GROUP=test_group
        # Goose Migration
      - GOOSE_DRIVER=mysql
      - GOOSE_DBSTRING=test_user:test_password@tcp(mysql-test:3306)/chat_app_test_db?parseTime=true
      - GOOSE_MIGRATION_DIR=migrations/mysql
      
    networks:
      - chat_app_test_network
    depends_on:
      mysql-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    profiles:
      - migration  # Use profile to run this service only when needed
    restart: "no"

networks:
  chat_app_test_network:
    driver: bridge
