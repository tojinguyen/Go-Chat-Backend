services:
  mysql:
    image: mysql:8.0.41-debian
    container_name: realtime_chat_app_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT:-3306}:3306"
    volumes:
      - mysql_realtime-chat-data:/var/lib/mysql
    networks:
      - chat_app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:8.0-rc1
    container_name: realtime_chat_app_redis
    ports:
      - "${REDIS_HOST_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - chat_app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: realtime_chat_app_kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      
      # Additional configurations
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - chat_app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: realtime_chat_app_kafka_ui
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - chat_app_network
    depends_on:
      - kafka
    restart: unless-stopped

  chat1:
    container_name: realtime_chat_app_api_1
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      # Database
      - DATABASE_URL=tojidev:toai20102002@tcp(realtime_chat_app_mysql:3306)/chat_app_db
      
      # App Config
      - RUN_MODE=debug
      - PORT=8080
      - CORS_ALLOW_ORIGIN=http://localhost:3000
      
      # MySQL
      - MYSQL_HOST=realtime_chat_app_mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=tojidev
      - MYSQL_PASSWORD=toai20102002
      - MYSQL_DATABASE=chat_app_db
      - MYSQL_SSL_MODE=disable
      - MYSQL_MIGRATE_MODE=auto
      
      # Goose Migration
      - GOOSE_DRIVER=mysql
      - GOOSE_DBSTRING=tojidev:toai20102002@tcp(realtime_chat_app_mysql:3306)/chat_app_db?parseTime=true
      - GOOSE_MIGRATION_DIR=migrations/mysql
      
      # JWT
      - JWT_SECRET_KEY=your_jwt_secret_key
      - JWT_EXPIRATION=24
      
      # Token
      - ACCESS_TOKEN_SECRET_KEY=your_access_token_secret
      - ACCESS_TOKEN_EXPIRE_MINutes=60
      - REFRESH_TOKEN_SECRET_KEY=your_refresh_token_secret
      - REFRESH_TOKEN_EXPIRE_MINUTES=1440
      
      # Frontend
      - FRONTEND_URI=http://localhost:3000
      - FRONTEND_PORT=3000
      
      # Mail
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=toainguyenvan20102002@gmail.com
      - EMAIL_PASS=fuks eduz qrca blzx
      - EMAIL_FROM=toainguyenvan20102002@gmail.com
      - EMAIL_NAME=Realtime Chat App
      
      # Verification
      - VERIFICATION_CODE_LENGTH=6
      - VERIFICATION_TIMEOUT_MINUTES=5
      
      # Cloudinary
      - CLOUDINARY_CLOUD_NAME=durc9hj8m
      - CLOUDINARY_API_KEY=926449462278945
      - CLOUDINARY_API_SECRET=fiaYmnfUF3fP_y1FtzGSzwJ853k
      
      # Redis
      - REDIS_HOST=realtime_chat_app_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=toai20102002
      - REDIS_DB=0
    networks:
      - chat_app_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped

  chat2:
    container_name: realtime_chat_app_api_2
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      # Database
      - DATABASE_URL=tojidev:toai20102002@tcp(realtime_chat_app_mysql:3306)/chat_app_db
      
      # App Config
      - RUN_MODE=debug
      - PORT=8080
      - CORS_ALLOW_ORIGIN=http://localhost:3000
      
      # MySQL
      - MYSQL_HOST=realtime_chat_app_mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=tojidev
      - MYSQL_PASSWORD=toai20102002
      - MYSQL_DATABASE=chat_app_db
      - MYSQL_SSL_MODE=disable
      - MYSQL_MIGRATE_MODE=auto
      
      # Goose Migration
      - GOOSE_DRIVER=mysql
      - GOOSE_DBSTRING=tojidev:toai20102002@tcp(realtime_chat_app_mysql:3306)/chat_app_db?parseTime=true
      - GOOSE_MIGRATION_DIR=migrations/mysql
      
      # JWT
      - JWT_SECRET_KEY=your_jwt_secret_key
      - JWT_EXPIRATION=24
      
      # Token
      - ACCESS_TOKEN_SECRET_KEY=your_access_token_secret
      - ACCESS_TOKEN_EXPIRE_MINutes=60
      - REFRESH_TOKEN_SECRET_KEY=your_refresh_token_secret
      - REFRESH_TOKEN_EXPIRE_MINUTES=1440
      
      # Frontend
      - FRONTEND_URI=http://localhost:3000
      - FRONTEND_PORT=3000
      
      # Mail
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=toainguyenvan20102002@gmail.com
      - EMAIL_PASS=fuks eduz qrca blzx
      - EMAIL_FROM=toainguyenvan20102002@gmail.com
      - EMAIL_NAME=Realtime Chat App
      
      # Verification
      - VERIFICATION_CODE_LENGTH=6
      - VERIFICATION_TIMEOUT_MINUTES=5
      
      # Cloudinary
      - CLOUDINARY_CLOUD_NAME=durc9hj8m
      - CLOUDINARY_API_KEY=926449462278945
      - CLOUDINARY_API_SECRET=fiaYmnfUF3fP_y1FtzGSzwJ853k
      
      # Redis
      - REDIS_HOST=realtime_chat_app_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=toai20102002
      - REDIS_DB=0
    networks:
      - chat_app_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped

  chat3:
    container_name: realtime_chat_app_api_3
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      # Database
      - DATABASE_URL=tojidev:toai20102002@tcp(realtime_chat_app_mysql:3306)/chat_app_db
      
      # App Config
      - RUN_MODE=debug
      - PORT=8080
      - CORS_ALLOW_ORIGIN=http://localhost:3000
      
      # MySQL
      - MYSQL_HOST=realtime_chat_app_mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=tojidev
      - MYSQL_PASSWORD=toai20102002
      - MYSQL_DATABASE=chat_app_db
      - MYSQL_SSL_MODE=disable
      - MYSQL_MIGRATE_MODE=auto
      
      # Goose Migration
      - GOOSE_DRIVER=mysql
      - GOOSE_DBSTRING=tojidev:toai20102002@tcp(realtime_chat_app_mysql:3306)/chat_app_db?parseTime=true
      - GOOSE_MIGRATION_DIR=migrations/mysql
      
      # JWT
      - JWT_SECRET_KEY=your_jwt_secret_key
      - JWT_EXPIRATION=24
      
      # Token
      - ACCESS_TOKEN_SECRET_KEY=your_access_token_secret
      - ACCESS_TOKEN_EXPIRE_MINutes=60
      - REFRESH_TOKEN_SECRET_KEY=your_refresh_token_secret
      - REFRESH_TOKEN_EXPIRE_MINUTES=1440
      
      # Frontend
      - FRONTEND_URI=http://localhost:3000
      - FRONTEND_PORT=3000
      
      # Mail
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_USER=toainguyenvan20102002@gmail.com
      - EMAIL_PASS=fuks eduz qrca blzx
      - EMAIL_FROM=toainguyenvan20102002@gmail.com
      - EMAIL_NAME=Realtime Chat App
      
      # Verification
      - VERIFICATION_CODE_LENGTH=6
      - VERIFICATION_TIMEOUT_MINUTES=5
      
      # Cloudinary
      - CLOUDINARY_CLOUD_NAME=durc9hj8m
      - CLOUDINARY_API_KEY=926449462278945
      - CLOUDINARY_API_SECRET=fiaYmnfUF3fP_y1FtzGSzwJ853k
      
      # Redis
      - REDIS_HOST=realtime_chat_app_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=toai20102002
      - REDIS_DB=0
    networks:
      - chat_app_network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - chat_app_network
    depends_on:
      - chat1
      - chat2
      - chat3

      
volumes:
  mysql_realtime-chat-data:
  kafka_data:

networks:
  default:
    name: chat_app_network
  chat_app_network:
    driver: bridge